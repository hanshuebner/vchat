// boolean
     auto_left_margin        bw      cursor_left wraps from column 0 to last
                                     column
     auto_right_margin       am      terminal has automatic margins
     no_esc_ctlc             xb      beehive (f1=escape, f2=ctrl C)
     ceol_standout_glitch    xs      standout not erased by overwriting (hp)
     eat_newline_glitch      xn      newline ignored after 80 cols (concept)
     erase_overstrike        eo      can erase overstrikes with a blank
     generic_type            gn      generic line type
     hard_copy               hc      hardcopy terminal
     has_meta_key            km      Has a meta key, sets msb high
     has_status_line         hs      has extra status line
     insert_null_glitch      in      insert mode distinguishes nulls
     memory_above            da      display may be retained above the screen
     memory_below            db      display may be retained below the screen
     move_insert_mode        mi      safe to move while in insert mode
     move_standout_mode      ms      safe to move while in standout mode
     over_strike             os      terminal can overstrike
     status_line_esc_ok      es      escape can be used on the status line
     dest_tabs_magic_smso    xt      tabs destructive, magic so char (t1061)
     tilde_glitch            hz      can't print ~'s (hazeltine)
     transparent_underline   ul      underline character overstrikes
     xon_xoff                xo      terminal uses xon/xoff handshaking
     needs_xon_xoff          nx      padding won't work, xon/xoff required
     prtr_silent             5i      printer won't echo on screen
     hard_cursor             HC      cursor is hard to see
     non_rev_rmcup           NR      enter_ca_mode does not reverse exit_ca_mode
     no_pad_char             NP      pad character does not exist
     non_dest_scroll_region  ND      scrolling region is non-destructive
     can_change              cc      terminal can re-define existing colors
     back_color_erase        ut      screen erased with background color
     hue_lightness_saturation        hl      terminal uses only HLS color
                                             notation (tektronix)
     col_addr_glitch         YA      only positive motion for column address and
                                     micro_column_address caps
     cr_cancels_micro_mode   YB      using cr turns off micro mode
     has_print_wheel         YC      printer needs operator to change character
                                     set
     row_addr_glitch         YD      only positive motion for row_address and
                                     micro_row_address caps
     semi_auto_right_margin  YE      printing in last column causes cr
     cpi_changes_res         YF      changing character pitch changes resolution
     lpi_changes_res         YG      changing line pitch changes resolution
// numeric
     buffer_capacity         Ya      numbers of bytes buffered before printing
     dot_vert_spacing        Yb      spacing of pins vertically in pins per inch
     dot_horz_spacing        Yc      spacing of dots horizontally in dots per
                                     inch
     max_micro_address       Yd      maximum value in micro_..._address
     max_micro_jump          Ye      maximum value in parm_..._micro
     micro_char_size         Yf      character size when in micro mode
     micro_line_size         Yg      line size when in micro mode
     number_of_pins          Yh      numbers of pins in print-head
     output_res_char         Yi      horizontal resolution in units per line
     output_res_line         Yj      vertical resolution in units per line
     output_res_horz_inch    Yk      horizontal resolution in units per inch
     output_res_vert_inch    Yl      vertical resolution in units per inch
     print_rate              Ym      print rate in chars per second
     wide_char_size          Yn      character step size when in double wide
                                     mode
     buttons                 BT      number of buttons on mouse
     bit_image_entwining     Yo      number of passed for each bit-image row
     bit_image_type          Yp      type of bit-image device
// string
     back_tab                bt      back tab (P)
     bell                    bl      audible signal (bell) (P)
     carriage_return         cr      carriage return (P*)
     change_scroll_region    cs      change region to line #1 to line #2 (P)
     clear_all_tabs          ct      clear all tab stops (P)
     clear_screen            cl      clear screen and home cursor (P*)
     clr_eol                 ce      clear to end of line (P)
     clr_eos                 cd      clear to end of screen (P*)
     column_address          ch      horizontal position #1, absolute (P)
     command_character       CC      terminal settable cmd character in
                                     prototype
     cursor_address          cm      move to row #1 columns #2
     cursor_down             do      down one line
     cursor_home             ho      home cursor
     cursor_invisible        vi      make cursor invisible
     cursor_left             le      move left one space
     cursor_mem_address      CM      memory relative cursor addressing
     cursor_normal           ve      make cursor appear normal (undo
                                     cursor_invisible/cursor_visible)
     cursor_right            nd      move right one space
     cursor_to_ll            ll      last line, first column
     cursor_up               up      up one line
     cursor_visible          vs      make cursor very visible
     delete_character        dc      delete character (P*)
     delete_line             dl      delete line (P*)
     dis_status_line         ds      disable status line
     down_half_line          hd      half a line down
     enter_alt_charset_mode  as      start alternate character set (P)
     enter_blink_mode        mb      turn on blinking
     enter_bold_mode         md      turn on bold (extra bright) mode
     enter_ca_mode           ti      string to start programs using
                                     cursor_address
     enter_delete_mode       dm      enter delete mode
     enter_dim_mode          mh      turn on half-bright mode
     enter_insert_mode       im      enter insert mode
     enter_secure_mode       mk      turn on blank mode (characters invisible)
     enter_protected_mode    mp      turn on protected mode
     enter_reverse_mode      mr      turn on reverse video mode
     enter_standout_mode     so      begin standout mode
     enter_underline_mode    us      begin underline mode
     erase_chars             ec      erase #1 characters (P)
     exit_alt_charset_mode   ae      end alternate character set (P)
     exit_attribute_mode     me      turn off all attributes
     exit_ca_mode            te      strings to end programs using cup
     exit_delete_mode        ed      end delete mode
     exit_insert_mode        ei      exit insert mode
     exit_standout_mode      se      exit standout mode
     exit_underline_mode     ue      exit underline mode
     flash_screen            vb      visible bell (may not move cursor)
     form_feed               ff      hardcopy terminal page eject (P*)
     from_status_line        fs      return from status line
     init_1string            i1      initialization string
     init_2string            is      initialization string
     init_3string            i3      initialization string
     init_file               if      name of initialization file
     insert_character        ic      insert character (P)
     insert_line             al      insert line (P*)
     insert_padding          ip      insert padding after inserted character
     key_backspace           kb      backspace key
     key_catab               ka      clear-all-tabs key
     key_clear               kC      clear-screen or erase key
     key_ctab                kt      clear-tab key
     key_dc                  kD      delete-character key
     key_dl                  kL      delete-line key
     key_down                kd      down-arrow key
     key_eic                 kM      sent by rmir or smir in insert mode
     key_eol                 kE      clear-to-end-of-line key
     key_eos                 kS      clear-to-end-of-screen key
     key_f0                  k0      F0 function key
     key_f1                  k1      F1 function key
     key_f10                 k;      F10 function key
     key_f2                  k2      F2 function key
     key_f3                  k3      F3 function key
     key_f4                  k4      F4 function key
     key_f5                  k5      F5 function key
     key_f6                  k6      F6 function key
     key_f7                  k7      F7 function key
     key_f8                  k8      F8 fucntion key
     key_f9                  k9      F9 function key
     key_home                kh      home key
     key_ic                  kI      insert-character key
     key_il                  kA      insert-line key
     key_left                kl      left-arrow key
     key_ll                  kH      last-line key
     key_npage               kN      next-page key
     key_ppage               kP      prev-page key
     key_right               kr      right-arrow key
     key_sf                  kF      scroll-forward key
     key_sr                  kR      scroll-backward key
     key_stab                kT      set-tab key
     key_up                  ku      up-arrow key
     keypad_local            ke      leave 'keyboard_transmit' mode
     keypad_xmit             ks      enter 'keyboard_transmit' mode
     lab_f0                  l0      label on function key f0 if not f0
     lab_f1                  l1      label on function key f1 if not f1
     lab_f10                 la      label on function key f10 if not f10
     lab_f2                  l2      label on function key f2 if not f2
     lab_f3                  l3      label on function key f3 if not f3
     lab_f4                  l4      label on function key f4 if not f4
     lab_f5                  l5      lable on function key f5 if not f5
     lab_f6                  l6      label on function key f6 if not f6
     lab_f7                  l7      label on function key f7 if not f7
     lab_f8                  l8      label on function key f8 if not f8
     lab_f9                  l9      label on function key f9 if not f9
     meta_off                mo      turn off meta mode
     meta_on                 mm      turn on meta mode (8th-bit on)
     newline                 nw      newline (behave like cr followed by lf)
     pad_char                pc      padding char (instead of null)
     parm_dch                DC      delete #1 chars (P*)
     parm_delete_line        DL      delete #1 lines (P*)
     parm_down_cursor        DO      down #1 lines (P*)
     parm_ich                IC      insert #1 chars (P*)
     parm_index              SF      scroll forward #1 lines (P)
     parm_insert_line        AL      insert #1 lines (P*)
     parm_left_cursor        LE      move #1 chars to the left (P)
     parm_right_cursor       RI      move #1 chars to the right (P*)
     parm_rindex             SR      scroll back #1 lines (P)
     parm_up_cursor          UP      up #1 lines (P*)
     pkey_key                pk      program function key #1 to type string #2
     pkey_local              pl      program function key #1 to execute
                                     string #2
     pkey_xmit               px      program function key #1 to transmit
                                     string #2
     print_screen            ps      print contents of screen
     prtr_off                pf      turn off printer
     prtr_on                 po      turn on printer
     repeat_char             rp      repeat char #1 #2 times (P*)
     reset_1string           r1      reset string
     reset_2string           r2      reset string
     reset_3string           r3      reset string
     reset_file              rf      name of reset file
     restore_cursor          rc      restore cursor to last position of
                                     save_cursor
     row_address             cv      vertical position #1 absolute (P)
     save_cursor             sc      save current cursor position (P)
     scroll_forward          sf      scroll text up (P)
     scroll_reverse          sr      scroll text down (P)
     set_attributes          sa      define video attributes #1-#9 (PG9)
     set_tab                 st      set a tab in every row, current columns
     set_window              wi      current window is lines #1-#2 cols #3-#4
     tab                     ta      tab to next 8-space hardware tab stop
     to_status_line          ts      move to status line
     underline_char          uc      underline char and move past it
     up_half_line            hu      half a line up
     init_prog               iP      path name of program for initialization
     key_a1                  K1      upper left of keypad
     key_a3                  K3      upper right of keypad
     key_b2                  K2      center of keypad
     key_c1                  K4      lower left of keypad
     key_c3                  K5      lower right of keypad
     prtr_non                pO      turn on printer for #1 bytes
     termcap_init2           i2      secondary initialization string
     termcap_reset           rs      terminal reset string
     char_padding            rP      like insert_padding but when in insert mode
     acs_chars               ac      graphics charset pairs - def=vt100
     plab_norm               pn      program label #1 to show string #2
     key_btab                kB      back-tab key
     enter_xon_mode          SX      turn on xon/xoff handshaking
     exit_xon_mode           RX      turn off xon/xoff handshaking
     enter_am_mode           SA      turn on automatic margins
     exit_am_mode            RA      turn off automatic margins
     xon_character           XN      XON character
     xoff_character          XF      XOFF character
     ena_acs                 eA      enable alternate char set
     label_on                LO      turn on soft labels
     label_off               LF      turn off soft labels
     key_beg                 @1      begin key
     key_cancel              @2      cancel key
     key_close               @3      close key
     key_command             @4      command key
     key_copy                @5      copy key
     key_create              @6      create key
     key_end                 @7      end key
     key_enter               @8      enter/send key
     key_exit                @9      exit key
     key_find                @0      find key
     key_help                %1      help key
     key_mark                %2      mark key
     key_message             %3      message key
     key_move                %4      move key
     key_next                %5      next key
     key_open                %6      open key
     key_options             %7      options key
     key_previous            %8      previous key
     key_print               %9      print key
     key_redo                %0      redo key
     key_reference           &1      reference key
     key_refresh             &2      refresh key
     key_replace             &3      replace key
     key_restart             &4      restart key
     key_resume              &5      resume key
     key_save                &6      save key
     key_suspend             &7      suspend key
     key_undo                &8      undo key
     key_sbeg                &9      shifted key
     key_scancel             &0      shifted key
     key_scommand            *1      shifted key
     key_scopy               *2      shifted key
     key_screate             *3      shifted key
     key_sdc                 *4      shifted key
     key_sdl                 *5      shifted key
     key_select              *6      select key
     key_send                *7      shifted key
     key_seol                *8      shifted key
     key_sexit               *9      shifted key
     key_sfind               *0      shifted key
     key_shelp               #1      shifted key
     key_shome               #2      shifted key
     key_sic                 #3      shifted key
     key_sleft               #4      shifted key
     key_smessage            %a      shifted key
     key_smove               %b      shifted key
     key_snext               %c      shifted key
     key_soptions            %d      shifted key
     key_sprevious           %e      shifted key
     key_sprint              %f      shifted key
     key_sredo               %g      shifted key
     key_sreplace            %h      shifted key
     key_sright              %i      shifted key
     key_srsume              %j      shifted key
     key_ssave               !1      shifted key
     key_ssuspend            !2      shifted key
     key_sundo               !3      shifted key
     req_for_input           RF      send next input char (for ptys)
     key_f11                 F1      F11 function key
     key_f12                 F2      F12 function key
     key_f13                 F3      F13 function key
     key_f14                 F4      F14 function key
     key_f15                 F5      F15 function key
     key_f16                 F6      F16 function key
     key_f17                 F7      F17 function key
     key_f18                 F8      F18 function key
     key_f19                 F9      F19 function key
     key_f20                 FA      F20 function key
     key_f21                 FB      F21 function key
     key_f22                 FC      F22 function key
     key_f23                 FD      F23 function key
     key_f24                 FE      F24 function key
     key_f25                 FF      F25 function key
     key_f26                 FG      F26 function key
     key_f27                 FH      F27 function key
     key_f28                 FI      F28 function key
     key_f29                 FJ      F29 function key
     key_f30                 FK      F30 function key
     key_f31                 FL      F31 function key
     key_f32                 FM      F32 function key
     key_f33                 FN      F33 function key
     key_f34                 FO      F34 function key
     key_f35                 FP      F35 function key
     key_f36                 FQ      F36 function key
     key_f37                 FR      F37 function key
     key_f38                 FS      F38 function key
     key_f39                 FT      F39 function key
     key_f40                 FU      F40 function key
     key_f41                 FV      F41 function key
     key_f42                 FW      F42 function key
     key_f43                 FX      F43 function key
     key_f44                 FY      F44 function key
     key_f45                 FZ      F45 function key
     key_f46                 Fa      F46 function key
     key_f47                 Fb      F47 function key
     key_f48                 Fc      F48 function key
     key_f49                 Fd      F49 function key
     key_f50                 Fe      F50 function key
     key_f51                 Ff      F51 function key
     key_f52                 Fg      F52 function key
     key_f53                 Fh      F53 function key
     key_f54                 Fi      F54 function key
     key_f55                 Fj      F55 function key
     key_f56                 Fk      F56 function key
     key_f57                 Fl      F57 function key
     key_f58                 Fm      F58 function key
     key_f59                 Fn      F59 function key
     key_f60                 Fo      F60 function key
     key_f61                 Fp      F61 function key
     key_f62                 Fq      F62 function key
     key_f63                 Fr      F63 function key
     clr_bol                 cb      Clear to beginning of line
     clear_margins           MC      clear right and left soft margins
     set_left_margin         ML      set left soft margin
     set_right_margin        MR      set right soft margin
     label_format            Lf      label format
     set_clock               SC      set clock, #1 hrs #2 mins #3 secs
     display_clock           DK      display clock at (#1,#2)
     remove_clock            RC      remove clock
     create_window           CW      define a window #1 from #2, #3 to #4, #5
     goto_window             WG      go to window #1
     hangup                  HU      hang-up phone
     dial_phone              DI      dial number #1
     quick_dial              QD      dial number #1 without checking
     tone                    TO      select touch tone dialing
     pulse                   PU      select pulse dialling
     flash_hook              fh      flash switch hook
     fixed_pause             PA      pause for 2-3 seconds
     wait_tone               WA      wait for dial-tone
     user0                   u0      User string #0
     user1                   u1      User string #1
     user2                   u2      User string #2
     user3                   u3      User string #3
     user4                   u4      User string #4
     user5                   u5      User string #5
     user6                   u6      User string #6
     user7                   u7      User string #7
     user8                   u8      User string #8
     user9                   u9      User string #9
     orig_pair               op      Set default pair to its original value
     orig_colors             oc      Set all color pairs to the original ones
     initialize_color        Ic      initialize color #1 to (#2,#3,#4)
     initialize_pair         Ip      Initialize color pair #1 to fg=(#2,#3,#4),
                                     bg=(#5,#6,#7)
     set_color_pair          sp      Set current color pair to #1
     set_foreground          Sf      Set foreground color #1
     set_background          Sb      Set background color #1
     change_char_pitch       ZA      Change number of characters per inch
     change_line_pitch       ZB      Change number of lines per inch
     change_res_horz         ZC      Change horizontal resolution
     change_res_vert         ZD      Change vertical resolution
     define_char             ZE      Define a character
     enter_doublewide_mode   ZF      Enter double-wide mode
     enter_draft_quality     ZG      Enter draft-quality mode
     enter_italics_mode      ZH      Enter italic mode
     enter_leftward_mode     ZI      Start leftward carriage motion
     enter_micro_mode        ZJ      Start micro-motion mode
     enter_near_letter_quality       ZK      Enter NLQ mode
     enter_normal_quality    ZL      Enter normal-quality mode
     enter_shadow_mode       ZM      Enter shadow-print mode
     enter_subscript_mode    ZN      Enter subscript mode
     enter_superscript_mode  ZO      Enter superscript mode
     enter_upward_mode       ZP      Start upward carriage motion
     exit_doublewide_mode    ZQ      End double-wide mode
     exit_italics_mode       ZR      End italic mode
     exit_leftward_mode      ZS      End left-motion mode
     exit_micro_mode         ZT      End micro-motion mode
     exit_shadow_mode        ZU      End shadow-print mode
     exit_subscript_mode     ZV      End subscript mode
     exit_superscript_mode   ZW      End superscript mode
     exit_upward_mode        ZX      End reverse character motion
     micro_column_address    ZY      Like column_address in micro mode
     micro_down              ZZ      Like cursor_down in micro mode
     micro_left              Za      Like cursor_left in micro mode
     micro_right             Zb      Like cursor_right in micro mode
     micro_row_address       Zc      Like row_address in micro mode
     micro_up                Zd      Like cursor_up in micro mode
     order_of_pins           Ze      Match software bits to print-head pins
     parm_down_micro         Zf      Like parm_down_cursor in micro mode
     parm_left_micro         Zg      Like parm_left_cursor in micro mode
     parm_right_micro        Zh      Like parm_right_cursor in micro mode
     parm_up_micro           Zi      Like parm_up_cursor in micro mode
     select_char_set         Zj      Select character set
     set_bottom_margin       Zk      Set bottom margin at current line
     set_bottom_margin_parm  Zl      Set bottom margin at line #1 or #2 lines
                                     from bottom
     set_left_margin_parm    Zm      Set left (right) margin at column #1 (#2)
     set_right_margin_parm   Zn      Set right margin at column #1
     set_top_margin          Zo      Set top margin at current line
     set_top_margin_parm     Zp      Set top (bottom) margin at row #1 (#2)
     start_bit_image         Zq      Start printing bit image braphics
     start_char_set_def      Zr      Start character set definition
     stop_bit_image          Zs      Stop printing bit image graphics
     stop_char_set_def       Zt      End definition of character aet
     subscript_characters    Zu      List of subscriptable characters
     superscript_characters  Zv      List of superscriptable characters
     these_cause_cr          Zw      Printing any of these chars causes CR
     zero_motion             Zx      No motion for subsequent character
     char_set_names          Zy      List of character set names
     key_mouse               Km      Mouse event has occurred
     mouse_info              Mi      Mouse status information
     req_mouse_pos           RQ      Request mouse position
     get_mouse               Gm      Curses should get button events
     set_a_foreground        AF      Set ANSI foreground color
     set_a_background        AB      Set ANSI background color
     pkey_plab               xl      Program function key #1 to type string #2
                                     and show string #3
     device_type             dv      Indicate language/codeset support
     code_set_init           ci      Init sequence for multiple codesets
     set0_des_seq            s0      Shift to code set 0 (EUC set 0, ASCII)
     set1_des_seq            s1      Shift to code set 1
     set2_des_seq            s2      Shift to code set 2
     set3_des_seq            s3      Shift to code set 3
     set_lr_margin           ML      Set both left and right margins to #1, #2
     set_tb_margin           MT      Sets both top and bottom margins to #1, #2
     bit_image_repeat        Xy      Repeat bit image cell #1 #2 times
     bit_image_newline       Zz      Move to next row of the bit image
     bit_image_carriage_return       Yv      Move to beginning of same row
     color_names             Yw      Give name for color #1
     define_bit_image_region Yx      Define rectangualar bit image region
     end_bit_image_region    Yy      End a bit-image region
     set_color_band          Yz      Change to ribbon color #1
     set_page_length         YZ      Set page length to #1 lines
     display_pc_char         S1      Display PC character
     enter_pc_charset_mode   S2      Enter PC character display mode
     exit_pc_charset_mode    S3      Exit PC character display mode
     enter_scancode_mode     S4      Enter PC scancode mode
     exit_scancode_mode      S5      Exit PC scancode mode
     pc_term_options         S6      PC terminal options
     scancode_escape         S7      Escape for scancode emulation
     alt_scancode_esc        S8      Alternate escape for scancode emulation
     enter_horizontal_hl_mode        Xh      Enter horizontal highlight mode
     enter_left_hl_mode      Xl      Enter left highlight mode
     enter_low_hl_mode       Xo      Enter low highlight mode
     enter_right_hl_mode     Xr      Enter right highlight mode
     enter_top_hl_mode       Xt      Enter top highlight mode
     enter_vertical_hl_mode  Xv      Enter vertical highlight mode
